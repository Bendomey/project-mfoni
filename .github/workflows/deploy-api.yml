name: Build Api

on:
  workflow_call:

jobs:
    build:
        name: ⚙️ Build
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        - name: Setup dotnet
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '8.0'

        - uses: actions/cache@v3
          with:
              path: ~/.nuget/packages
              # Look to see if there is a cache hit for the corresponding requirements file
              key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
              restore-keys: |
                ${{ runner.os }}-nuget

        - name: Install dependencies
          run: dotnet restore
          working-directory: services/main

        - name: Prod Env
          id: create-json
          uses: jsdaniell/create-json@v1.2.2
          with:
            name: "appsettings.Production.json"
            json: ${{ secrets.PRODUCTION_ENV }}
            dir: 'services/main'

        - name: Build Release
          run: dotnet publish -c Release -o out
          working-directory: services/main

    deploy:
        name: 🚀 Deploy
        runs-on: ubuntu-latest

        steps:
          - name: ⬇️ Checkout repo
            uses: actions/checkout@v4

          - name: 👀 Read app name
            uses: SebRollen/toml-action@v1.0.0
            id: app_name
            with:
                file: 'fly.toml'
                field: 'app'

          - name: 🎈 Setup Fly
            uses: superfly/flyctl-actions/setup-flyctl@v1.4

          - name: 🚀 Deploy Staging
            if: ${{ github.ref == 'refs/heads/dev' }}
            run:
              flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
              --app ${{ steps.app_name.outputs.value }}
            env:
              FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
